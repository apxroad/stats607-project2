# --- 607 targets (Polya/DP) ---
.PHONY: clean
clean:
	rm -rf results/raw* results/figures* results/polya_checks*.csv .pytest_cache __pycache__
	mkdir -p results/raw results/figures

# -------- Part A --------
.PHONY: partA-prior
partA-prior:
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 0 --M 4000 --N 2000 --seed 2025

.PHONY: partA
partA:
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 100  --M 4000 --N 2000 --seed 2025
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 500  --M 4000 --N 2000 --seed 2025
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 1000 --M 4000 --N 2000 --seed 2025

# -------- Part B (no PIT) --------
.PHONY: partB
partB:
	python -m src_cli.partb_log_convergence --n 1000 --alpha 5 --t 0.25 0.5 0.75 --seed 2025 --base uniform
	python -m src_cli.partb_figures          --stem partB_n1000_a5.0_seed2025_uniform --title "n=1000, α=5, base=uniform"

# -------- Part C --------
.PHONY: partC
partC:
	python -m src_cli.partc_log_prop26 --alpha 5 --t 0.25 0.5 0.75 --n 100 500 1000 --M 400 --seed 2025 --base uniform
	python -m src_cli.partc_figures_prop26 --csv results/raw/prop26_M400_L50000_a5.0_seed2025_uniform.csv --title "Proposition 2.6: α=5, base=uniform"

.PHONY: everything
everything: clean partA-prior partA partB partC

# ===== Rubric aliases (simulate/analyze/figures/test/all) =====
# Common variables used by both simulate and figures steps
STEM_B := partB_n1000_a5.0_seed2025_uniform
PROP26_CSV := results/raw/prop26_M400_L50000_a5.0_seed2025_uniform.csv
TITLE_B := n=1000, α=5, base=uniform
TITLE_C := Proposition 2.6: α=5, base=uniform

.PHONY: simulate
simulate:
	# Part B: produce raw distances + P_m(t) paths
	python -m src_cli.partb_log_convergence --n 1000 --alpha 5 --t 0.25 0.5 0.75 --seed 2025 --base uniform
	# Part C: produce pooled-Z raw CSV
	python -m src_cli.partc_log_prop26 --alpha 5 --t 0.25 0.5 0.75 --n 100 500 1000 --M 400 --seed 2025 --base uniform

.PHONY: analyze
analyze:
	@echo "[analyze] No separate summarize step — figures consume raw outputs directly."

.PHONY: figures
figures:
	# Part A: prior + posterior panels (continuation)
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 0    --M 4000 --N 2000 --seed 2025
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 100  --M 4000 --N 2000 --seed 2025
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 500  --M 4000 --N 2000 --seed 2025
	python -m src_cli.parta_panels --base uniform --t 0.25 0.5 0.75 --alpha 1 5 20 --n 1000 --M 4000 --N 2000 --seed 2025
	# Part B: convergence + predictive-path figures
	python -m src_cli.partb_figures --stem $(STEM_B) --title "$(TITLE_B)"
	# Part C: pooled-Z figure
	python -m src_cli.partc_figures_prop26 --csv $(PROP26_CSV) --title "$(TITLE_C)"

.PHONY: test
test:
	pytest -q

.PHONY: all
all: clean simulate figures
	@echo "[all] done."
